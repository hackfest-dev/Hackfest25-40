I want you to create a frontend in react for my website called CSR-Kive, an archive for CSR Activities.

There should be a sidebar and it should include the following
1. Dashboard - shows all events in the form of cards and on clicking the card, it goes to the event detail page where event information along with report submission by employee is displayed
2. Create Event - a proper form to create event with all details
3. Employees - view all employee cards and click on anyone to view employee details, half width should show employee details, half should show leaderboard based on coins.

import mongoose from "mongoose";

const submissionSchema = new mongoose.Schema({
	employeeId: {
		type: mongoose.Schema.Types.ObjectId,
		ref: "Employee",
		required: true,
	},
	employeeName: {
		type: String,
		required: true,
	},
	report: {
		type: String,
		required: true,
	},
	picture: {
		type: String,
		required: true,
	},
});

const eventSchema = new mongoose.Schema({
	eventName: {
		type: String,
		required: true,
	},
	eventDate: {
		type: Date,
		required: true,
	},
	eventDescription: {
		type: String,
		required: true,
	},
	eventImage: {
		type: String,
		required: true,
	},
	eventLocation: {
		type: String,
		required: true,
	},
	eventCoins: {
		type: Number,
		required: true,
	},
	eventCategory: {
		type: String,
		enum: [
			"education",
			"healthcare",
			"vocational_training",
			"environment",
			"women_empowerment",
			"elderly_support",
			"support_differently_abled",
			"disaster_relief",
			"animal_welfare",
		],
		required: true,
	},
	eventSummary: {
		type: String,
		required: true,
	},
	submissions: [submissionSchema],
});

const adminSchema = new mongoose.Schema({
	name: {
		type: String,
		required: true,
	},
	logoUrl: {
		type: String,
		required: true,
	},
	vision: {
		type: String,
		required: true,
	},
	mission: {
		type: String,
		required: true,
	},
	objectives: {
		type: [String],
		required: true,
	},
	csrPhilsophy: {
		type: String,
		required: true,
	},
	adminName: {
		type: String,
		required: true,
	},
	adminEmail: {
		type: String,
		required: true,
	},
	events: [eventSchema],
});

export const Admin = mongoose.models.Admin || mongoose.model("Admin", adminSchema);

import mongoose from "mongoose";

const employeeEventSchema = new mongoose.Schema({
	eventName: {
		type: String,
		required: true,
	},
	eventDate: {
		type: Date,
		required: true,
	},
	eventDescription: {
		type: String,
		required: true,
	},
	eventImage: {
		type: String,
		required: true,
	},
	eventLocation: {
		type: String,
		required: true,
	},
	eventCoins: {
		type: Number,
		required: true,
	},
	eventCategory: {
		type: String,
		enum: [
			"education",
			"healthcare",
			"vocational_training",
			"environment",
			"women_empowerment",
			"elderly_support",
			"support_differently_abled",
			"disaster_relief",
			"animal_welfare",
		],
		required: true,
	},
});

const employeeSchema = new mongoose.Schema({
	name: {
		type: String,
		required: true,
	},
	organisation: {
		type: String,
		required: true,
	},
	email: {
		type: String,
		required: true,
	},
	events: [employeeEventSchema],
	categories: {
		type: [String],
	},
});

export const Employee = mongoose.models.Employee || mongoose.model("Employee", employeeSchema);
